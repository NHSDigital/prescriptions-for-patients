parameters:
  - name: full
    type: boolean
    default: false
  - name: test_command
    type: string
    default: "make test"
  - name: smoketest_command
    type: string
    default: "make smoketest"

steps:
  - bash: |
      make install-python
    workingDirectory: $(Pipeline.Workspace)/s/$(SERVICE_NAME)/$(SERVICE_ARTIFACT_NAME)
    displayName: Setup pytests
    condition: always()

  - ${{ if parameters.full }}:
      # In order to run tests in prod you must supply the unique ID of an Apigee app
      # that has authorized access to your service proxy.
      - bash: |
          export PROXY_NAME="$(FULLY_QUALIFIED_SERVICE_NAME)"
          export APIGEE_ACCESS_TOKEN="$(secret.AccessToken)"
          export APIGEE_APP_ID="MY APP ID"
          export STATUS_ENDPOINT_API_KEY="$(STATUS_ENDPOINT_API_KEY)"
          export SOURCE_COMMIT_ID="$(Build.SourceVersion)"
          ${{ parameters.test_command }}
        workingDirectory: $(Pipeline.Workspace)/s/$(SERVICE_NAME)/$(SERVICE_ARTIFACT_NAME)
        displayName: Run full test suite
      - task: PublishTestResults@2
        displayName: "Publish test results"
        condition: always()
        inputs:
          testResultsFiles: "$(Pipeline.Workspace)/s/$(SERVICE_NAME)/$(SERVICE_ARTIFACT_NAME)/test-report.xml"
          failTaskOnFailedTests: true
      - task: 6d15af64-176c-496d-b583-fd2ae21d4df4@1
        inputs:
          repository: self
          path: "$(SERVICE_NAME)/$(SERVICE_ARTIFACT_NAME)/prescriptions-for-patients"
          submodules: true
        displayName: Checkout code
        # Run the regression tests
      - bash: |
          if [[ "$(APIGEE_ENVIRONMENT)" != "prod" && "$(APIGEE_ENVIRONMENT)" != "ref" ]]; then
            # this should be the tag of the tests you want to run
            REGRESSION_TEST_REPO_TAG=parallel_test
            # this should be the tag of the regression test workflow you want to run
            # unless you are changing run_regression_tests.py or the regression test workflow, this should be left as main
            REGRESSION_TEST_WORKFLOW_TAG=parallel_test
            curl https://raw.githubusercontent.com/NHSDigital/electronic-prescription-service-api-regression-tests/refs/heads/${REGRESSION_TEST_WORKFLOW_TAG}/scripts/run_regression_tests.py -o run_regression_tests.py
            make install-python
            echo Running in the $(APIGEE_ENVIRONMENT) environment
            poetry run python -u run_regression_tests.py \
            --env=$(APIGEE_ENVIRONMENT) \
            --pr_label=${PR_LABEL} \
            --user $(GITHUB_USER):$(GITHUB_ACCESS_TOKEN) \
            --is_called_from_github false \
            --product PFP-APIGEE \
            --regression_test_repo_tag "${REGRESSION_TEST_REPO_TAG}" \
            --regression_test_workflow_tag "${REGRESSION_TEST_WORKFLOW_TAG}"
          fi
        displayName: Regression Tests
        condition: succeeded()
  - ${{ if not(parameters.full) }}:
      # In order to run tests in prod you must supply the unique ID of an Apigee app
      # that has authorized access to your service proxy.
      - bash: |
          export PROXY_NAME="$(FULLY_QUALIFIED_SERVICE_NAME)"
          export APIGEE_ACCESS_TOKEN="$(secret.AccessToken)"
          export APIGEE_APP_ID="MY APP ID"
          export STATUS_ENDPOINT_API_KEY="$(STATUS_ENDPOINT_API_KEY)"
          export SOURCE_COMMIT_ID="$(Build.SourceVersion)"
          ${{ parameters.smoketest_command }}
        workingDirectory: $(Pipeline.Workspace)/s/$(SERVICE_NAME)/$(SERVICE_ARTIFACT_NAME)
        displayName: Run smoketests
      - task: PublishTestResults@2
        displayName: "Publish smoketest results"
        condition: always()
        inputs:
          testResultsFiles: "$(Pipeline.Workspace)/s/$(SERVICE_NAME)/$(SERVICE_ARTIFACT_NAME)/smoketest-report.xml"
          failTaskOnFailedTests: true
